PARSER_BEGIN(EventTraceParser)

package tr.edu.boun.cmpe.mas.akin.hammurabi.event.parser;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

public class EventTraceParser {

    public static List<RawEventLog> parse(InputStream inputStream) throws ParseException {
        return (new EventTraceParser(inputStream)).eventLogs();
    }
}

PARSER_END(EventTraceParser)

SKIP : {" " | "\t" | "\n" | "\r"}

TOKEN : {
    < SEMICOLON : ";" > |
    < COMMA     : "," >
}

TOKEN : {
    < EVENT_LABEL : ["a"-"z","A"-"Z","_"] ( ["a"-"z","A"-"Z","_","0"-"9"] )* >
}

TOKEN : {
    < NUM : ["1" - "9"] (["0" - "9"])* >
}

List<RawEventLog> eventLogs() : {
    List<RawEventLog> eventLogs = new ArrayList();
    RawEventLog eventLog;
}
{
    ( eventLog = eventLog() {eventLogs.add(eventLog);} )+
    {return eventLogs;}
}

RawEventLog eventLog() : {
    String eventLabel;
    long moment;
    Token token;
}
{
    token = <EVENT_LABEL> {eventLabel = token.image;}
    <COMMA>
    token = <NUM> {moment = Long.parseLong(token.image);}
    {return new RawEventLog(eventLabel, moment);}
}
