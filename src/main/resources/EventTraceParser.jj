PARSER_BEGIN(EventTraceParser)

package tr.edu.boun.cmpe.mas.akin.hammurabi.event.parser;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

public class EventTraceParser {

    private static boolean initialized;

    static {
        initialized = false;
    }

    public static List<RawEventLog> parse(InputStream inputStream) throws ParseException {
        if (!initialized) {
            new EventTraceParser(inputStream);
            initialized = true;
        } else {
            ReInit(inputStream);
        }
        return eventLogs();
    }
}

PARSER_END(EventTraceParser)

SKIP : {" " | "\t" | "\n" | "\r"}

TOKEN : {
    < SEMICOLON : ";" > |
    < COMMA     : "," >
}

TOKEN : {
    < EVENT_LABEL : ["a"-"z","A"-"Z","_"] ( ["a"-"z","A"-"Z","_","0"-"9"] )* >
}

TOKEN : {
    < NUM : ["1" - "9"] (["0" - "9"])* >
}

List<RawEventLog> eventLogs() : {
    List<RawEventLog> eventLogs = new ArrayList();
    RawEventLog eventLog;
}
{
    ( eventLog = eventLog() {eventLogs.add(eventLog);} )+
    <EOF>
    {return eventLogs;}
}

RawEventLog eventLog() : {
    String eventLabel;
    long moment;
    Token localToken;
}
{
    localToken = <EVENT_LABEL> {eventLabel = localToken.image;}
    <COMMA>
    localToken = <NUM> {moment = Long.parseLong(localToken.image);}
    <SEMICOLON>
    {return new RawEventLog(eventLabel, moment);}
}
